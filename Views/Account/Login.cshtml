@using ExpensesWebApp.ViewModels;
@model LoginViewModel;
@{
    ViewData["Title"] = "Login";
}

<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-3 card p-3">
        <h2 class="text-center text-info">Login</h2>
        <form asp-action="Login" method="post">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            <div class="mb-1">
                <label asp-for="UserName"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="mb-1">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            @* <span class="text-danger text-sm-center mt-2">
            @Html.ValidationMessage("LoginFailure")
            </span> *@
            <div class="mb-1 form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(a => a.RememberMe)
                </label>
            </div>
            <div class="row">
                <div class="col-8">
                    <a class="text-decoration-none float-start mt-2" asp-action="Register">Não tem uma conta?</a>
                </div>
                <div class="col-4">
                    <input type="submit" value="Login" class="btn btn-primary btn-sm float-end" />
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}